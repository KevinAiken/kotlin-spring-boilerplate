import org.springframework.boot.gradle.tasks.bundling.BootJar

buildscript {
    ext.kotlinVersion = '1.3.41'
    ext.springBootVersion = '2.1.5.RELEASE'
    ext.springAdminVersion = '2.1.5'

    //Reads application.properties in so that the flywayMigrate task can read the db credentials
    ext.ApplicationProps = new Properties()
    ApplicationProps.load(new FileInputStream("src/main/resources/application.properties"))

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        // See https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.postgresql:postgresql:42.2.5"
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.2.4"
}

apply plugin: 'kotlin'
// https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "java"

repositories {
    jcenter()
}

configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

flyway {
    url = ApplicationProps['spring.datasource.url']
    user = ApplicationProps['spring.datasource.username']
    password = ApplicationProps['spring.datasource.password']
}

tasks.withType(BootJar).all {
    it.archiveBaseName = 'starter'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceSets {
    main {
        kotlin.srcDir 'src/main/kotlin'
        resources.srcDir 'src/main/resources'
    }

    test {
        kotlin.srcDir 'src/test/kotlin'
        resources.srcDir 'src/test/resources'
    }
}

dependencies {
    ktlint "com.pinterest:ktlint:0.33.0"

    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-websocket:$springBootVersion"
    compile 'org.springframework:spring-jdbc:5.1.7.RELEASE'
    compile 'org.springframework:spring-messaging:5.1.10.RELEASE'
    compile 'org.springframework:spring-websocket:5.1.10.RELEASE'

    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile 'org.jetbrains.kotlin:kotlin-reflect'
    compile "io.springfox:springfox-swagger2:2.9.2"
    compile "io.springfox:springfox-swagger-ui:2.9.2"
    compile 'org.postgresql:postgresql:42.2.5'
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'com.zaxxer:HikariCP:3.3.1'
    compile 'com.vaadin.external.google:android-json:0.0.20131108.vaadin1'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.9'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.4'

    testCompile 'org.jetbrains.kotlin:kotlin-test-junit'
    testImplementation 'org.awaitility:awaitility-kotlin:4.0.1'
    testCompile 'io.zonky.test:embedded-database-spring-test:1.5.0'
    testImplementation enforcedPlatform('io.zonky.test.postgres:embedded-postgres-binaries-bom:10.6.0')
    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
}
